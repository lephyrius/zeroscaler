name: Build Boot Fargate Lambda for ARM64

on:
  push:
    branches: [main,build]
  pull_request:

jobs:
  build-lambda:
    name: Build Boot Fargate Lambda for ARM64
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout code for ARM64 build
        uses: actions/checkout@v4

      - name: Install Rust toolchain with Cargo Lambda
        uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-lambda
          targets: aarch64-unknown-linux-gnu

      - name: Install Zig toolchain
        uses: mlugg/setup-zig@v1
        with:
          version: 0.14.0

      - name: Install cargo-lambda
        run: cargo install cargo-lambda --locked

      - name: Build Lambda for ARM64
        working-directory: boot-fargate-lambda
        run: |
          cargo lambda build --release --arm64

      - name: Upload Boot Fargate Lambda artifact
        uses: actions/upload-artifact@v4
        with:
          name: boot_fargate_lambda
          path: boot-fargate-lambda/target/lambda/boot-fargate-lambda/bootstrap
  node-ci-test:
    name: Runs Node.js tests
    runs-on: ubuntu-latest
    needs: build-lambda
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js for NPM
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

      - name: Debug workspace contents
        run: ls -R ${{github.workspace}}
      - name: Package
        run: npm run package
  publish-npm:
    name: Publish on NPM
    runs-on: ubuntu-latest
    environment: npm
    needs: node-ci-test
    permissions:
      id-token: write
    steps:
      - name: Checkout zeroscaler-cdk
        uses: actions/checkout@v4
      - name: Download Artifact for lambda build
        uses: actions/download-artifact@v4
        with:
          name: boot_fargate_lambda
      - name: Set up Node.js for NPM
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Package jsii
        run: npm run package
      - name: Debug workspace contents
        run: ls -R ${{github.workspace}}
      - if: github.ref == 'refs/heads/main' || true
        name: Publish to NPM
        run: npx publib
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
