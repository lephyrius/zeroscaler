name: Build Boot Fargate Lambda for ARM64

on:
  push:
    branches: [main,build]
  pull_request:

jobs:
  build-lambda:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout code for ARM64 build
        uses: actions/checkout@v4

      - name: Install Rust toolchain with Cargo Lambda
        uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-lambda
          targets: aarch64-unknown-linux-gnu

      - name: Install Zig toolchain
        uses: mlugg/setup-zig@v1
        with:
          version: 0.14.0

      - name: Install cargo-lambda
        run: cargo install cargo-lambda --locked

      - name: Build Lambda for ARM64
        working-directory: boot-fargate-lambda
        run: |
          cargo lambda build --release --arm64

      - name: Upload Boot Fargate Lambda artifact
        uses: actions/upload-artifact@v4
        with:
          name: boot_fargate_lambda
          path: boot-fargate-lambda/target/lambda/boot-fargate-lambda/bootstrap
  publish-npm:
    name: Publish on NPM
    runs-on: ubuntu-latest
    environment: npm
    needs: build-lambda
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js for NPM
        uses: actions/setup-node@v1
        with:
          registry-url: 'https://registry.npmjs.org'

      - run: npm install
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-gpr:
    name: Publish on GPR
    runs-on: ubuntu-latest
    needs: build-lambda
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js for GPR
        uses: actions/setup-node@v1
        with:
          registry-url: 'https://npm.pkg.github.com/'
          scope: '@dbots-pkg'

      - run: npm install
      - run: npm run gpr
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}